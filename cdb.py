import argparse
import sys

parser = argparse.ArgumentParser(description="Converts shellcode generated by pe2shc into cdb format.")
parser.add_argument("-f","--file",help="File to convert to cdb format")
args = parser.parse_args()

if len(sys.argv) < 2:
	print("Please specify the shellcode file.")
	exit(1)

# Try to open file
try:
	f = open(args.file, "r+")
except FileNotFoundError:
	print("File not found.")
	exit(1)

# Delete the first line and last 2 lines
lines = f.readlines()
f.seek(0)
f.writelines(lines[1:-2])

# Read the file again
f.seek(0)
unformatted_shellcode = r'{}'.format(f.read())

# Remove commas and whitespace
temp_shellcode = unformatted_shellcode.replace(",","")
temp_shellcode = temp_shellcode.replace("\n","")
temp_shellcode = temp_shellcode.replace(" ","")

# Begin formatting
PREFIX = ";eb @$t0+"
counter = hex(0)[2:].zfill(2) # Hex counter starts at 00
linebreak_counter = 0
formatted_shellcode = ""

shellcode_list = temp_shellcode.split("0x")

for i in range(1,len(shellcode_list)):
	formatted_shellcode = formatted_shellcode + (PREFIX + str(counter) + " " + shellcode_list[i].upper())
	counter = hex(i)[2:].zfill(2)
	linebreak_counter += 1
	if(linebreak_counter % 4 == 0):
		formatted_shellcode = formatted_shellcode + "\n"

memory_needed = int(counter,16)

# Output file and write content
out_file = open("out.wds", "w")
out_file.write(".foreach /pS 5  ( register { .dvalloc " + str(memory_needed) + " } ) { r @$t0 = register }\n")
out_file.write(formatted_shellcode)
out_file.write("\nr @$ip=@$t0\n")

print("[+] Data written to out.wds");

out_file.close()
f.close()
